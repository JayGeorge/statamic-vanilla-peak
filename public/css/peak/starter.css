/* GROUP PEAK STARTER
=================================================== */
/* Notes...

    - This stylesheet simply replicates Peak's demo styles
    - Feel free to delete this file when you're ready to write custom CSS

*/

@layer base {
    body {
        min-height: 100vh;
        background: white;
        color: var(--color-primary-text);

        font-family: var(--font-family-main);
        font-weight: var(--font-family-main-weight-normal);
        /* https://app.typographychecklist.com/ - 23. Use standard ligatures but avoid using discretionary ligatures in body text */
        font-feature-settings: "kern", "liga", "clig", "calt";
        /* https://css-tricks.com/scrollbar-reflowing/ */
        scrollbar-gutter: stable both-edges;
    }
}



/* GROUP ELEMENTS
=================================================== */
@layer elements {
    /* GROUP ELEMENTS / FRAMEWORK
    =================================================== */
    /* ::selection {
        background: light color;
        color: dark color;
    } */
    /* https://twitter.com/bramus/status/1452572001697153029 */
    /* html,
    body {
        background: ;
    } */
    html {
        /* Consider disabling this if you have pages that require lots of cmd + f https://css-tricks.com/downsides-of-smooth-scrolling/ */
        scroll-behavior: smooth;
        font-size: calc(1em + var(--font-bump));
        /* Opinion on this will differ depending on the font you choose. Do not carpet bomb line height with a * selector though */
        line-height: 1.5;
        /* https://web.dev/accent-color/ */
        /* accent-color: hotpink; */
    }
    body {
        /* https://app.typographychecklist.com/ - 23. Use standard ligatures but avoid using discretionary ligatures in body text */
        font-feature-settings: "kern", "liga", "clig", "calt";
        font-family: var(--font-family-main);
        /* https://css-tricks.com/scrollbar-reflowing/ */
        scrollbar-gutter: stable both-edges;
    }
    /* Prevent images stretching too much */
    /* Use display:inline-block to prevent white space (read full answers here...) http://stackoverflow.com/questions/5804256/why-an-image-inside-a-div-has-an-extra-space-below-the-image */
    img {
        display: inline-block;
        /* Maintain aspect ratio */
        max-width: 100%;
        height: auto;
    }
    /* Reset */
    h1, h2, h3, h4, h5, h6,
    p,
    ul, ol,
    figure, blockquote {
        margin-block: 0;
    }
    /* Reset */
    figure {
        margin-inline: 0;
        & img {
            /* Push the caption away from the image */
            margin-block-end: var(--spacing-s);
        }
    }
    ul {
        padding-inline-start: 0;
    }
    /* Don't affect nav */
    main li {
        padding-block-end: var(--spacing-s-x);
    }
    dl,
    dt,dd,
    th,
    td {
        padding-block-end: var(--spacing-s);
    }
    p {
        margin-block-end: var(--spacing-m);
        &:last-child {
            margin-block-end: 0;
        }
    }
    a {
        color: inherit;
        text-decoration: inherit;
    }
    /* Don't affect Statamic's lists here, which contain p tags like this:
        <ol>
            <li>
                <p>Sponsor games</p>
            </li>
            <li>
                <p>Promote your game</p>
            </li>
            <li>
                <p>Sponsor live events</p>
            </li>
        </ol>
    */
    main :is(p:not(li p), ol, ul):not(:has(li p)) {
        line-height: var(--font-size-reading-line-height);
        list-style-position: inside;
        padding-inline-start: 0;
    }
    /* For Statamic's lists use a different method: */
    ol:has(li p) {
        padding-inline-start: var(--spacing-l-1);
    }
    p + ul {
        padding-block-start: var(--spacing-s);
    }
    strong {
        font-weight: var(--font-family-main-weight-strong);
    }
    svg {
        stroke: currentColor;
        fill: currentColor;
        /* For SVG icons */
        width: 1em;
        height: 1em;
    }
    :is(h1, h2, h3, h4, h5, h6, p) svg {
        vertical-align: baseline;
        margin-inline-end: var(--spacing-s-x);
    }
    /* GROUP ELEMENTS / FRAMEWORK / MAIN
    =================================================== */
    main {
        &:focus {
            outline: none;
        }
        /* Only when followed by the footer */
        &:has(+ footer) {
            margin-block-end: var(--spacing-l-4);
        }
        & > *:last-child {
            padding-block-end: 0;
        }
    }
    /* GROUP ELEMENTS / FRAMEWORK / HEADINGS
    =================================================== */
    /* https://developer.chrome.com/blog/CSS-text-wrap-balance */
    h1, h2, h3, h4, h5, h6 {
        text-wrap: balance;
    }
    blockquote, figcaption, p {
        text-wrap: pretty;
    }
    h1, .h1, h1 a, .h1 a, h2, .h2, h2 a, .h2 a, h3, .h3, h3 a, .h3 a {
        font-family: var(--font-family-headline);
        font-weight: var(--font-family-headline-weight-normal);
        /* https://app.typographychecklist.com/ 91 - Use discretionary ligatures and swashes in headlines */
        font-feature-settings: "kern", "liga", "clig", "calt", "dlig", "swsh";
        /* Override iOS Safari's user agent stylesheet */
        text-decoration: none;
        color: inherit; /* If you use a link inside a heading, inherit the colour so it's not the default browser-purple */
    }
    a :is(h1, h2, h3, h4, h5, h6) {
        /* When a heading is inside a link, escape the link colour */
        color: initial;
    }
    h2, .h2, h3, .h3, h4, .h4, h4 a, .h4 a {
        font-family: var(--font-family-headline);
        font-weight: var(--font-family-headline-weight-light);
    }
    h1, .h1 {
        font-size: var(--font-size-l); line-height: var(--font-size-l-line-height);
    }
    h2, .h2 {
        font-size: var(--font-size-m); line-height: var(--font-size-m-line-height);
    }
    h3, .h3 {
        font-size: var(--font-size-s); line-height: var(--font-size-s-line-height);
    }
    h4, .h4 {
        font-size: var(--font-size-s-1); line-height: var(--font-size-s-1-line-height);
    }
    h5, .h5 {
        font-size: var(--font-size-s); line-height: var(--font-size-s-line-height);
    }
    h6, .h6 {
        font-size: var(--font-size-s-x-1); line-height: var(--font-size-s-x-1-line-height);
    }
    /* GROUP ELEMENTS / FRAMEWORK / HEADINGS / HIGH PRIORITY / VERTICAL SPACING
    =================================================== */
    h1, .h1 {
        padding-block-end: var(--spacing-l);
    }
    h2, .h2 {
        padding-block-end: var(--spacing-m);
    }
    * + h2,
    * + .h2,
    article + article {
        padding-block-start: var(--spacing-l);
    }
    /* GROUP ELEMENTS / FRAMEWORK / HEADINGS / LOW PRIORITY / VERTICAL SPACING
    =================================================== */
    h3, .h3 {
        padding-block-end: var(--spacing-s);
    }
}
@layer components {
    /* Put these at the component level e.g. so we make sure we override something like .c-site-footer li { padding-block-end: var(--spacing-s-x); } */
    /* Nested lists */
    ol ol,
    ol ol li:last-child,
    ul ul,
    ul ul li:last-child {
        padding-block-end: 0;
    }

    button svg,
    .c-btn :is([src*="svg"], svg) {
        font-size: 1.1em;
    }
}



/* GROUP ELEMENTS / NAV
=================================================== */
@layer elements {
    nav {
        & ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }
        & a {
            color: inherit;
        }
        & svg:last-child {
            /* subnav arrow */
            margin-inline-start: var(--spacing-s-x-x);
            width: 0.7rem;
            color: var(--color-primary-text);

            *:has(> &) {
                /* The SVG container */
                display: flex;
            }
        }
    }
}
@layer objects {
    .o-subnav {
        transition: var(--transition-transform);
    }
    .o-subnav--open {
        transform: scaleY(-1);
    }
}



/* GROUP ELEMENTS / FRAMEWORK / TEXT / LINK STYLES {/ LINKS }
=================================================== */
/* Notes...

    - Link styles are stored as group selectors rather than scattered, since we have multiple properties here.
    - Do not put transitions on all links, it makes keyboard navigation feel slower. Instead, use transition animations on an individual basis e.g. skip-to-content

*/

/* Default */
@layer elements {
    a,
    button {
        text-decoration-skip-ink: auto;
        text-underline-position: under;
        text-decoration-color: var(--color-primary-accent);
        color: var(--color-link);
    }
}
@layer scope {
    .s-entry-content a {
        text-decoration-line: none;
    }
}
/* GROUP ELEMENTS / FRAMEWORK / TEXT / LINK STYLES {/ LINKS} / ACCESSIBILITY / HOVER
=================================================== */
@layer scope {
    .s-entry-content a:hover {
        /* Change these */
        text-decoration-color: red;
        color: red;
    }
}
/* GROUP ELEMENTS / TEXT / LINK STYLES {/ LINKS} / ACCESSIBILITY / FOCUS
=================================================== */
@layer base {
    :is(a, button, summary):focus-visible,
    input:focus-visible,
    select:focus-visible,
    textarea:focus-visible {
        outline: var(--focus-width) solid var(--color-focus);
    }
    /* ensure the focus outline is effective when a link is wrapped around a heading */
    a:has(> h2, h3, h4, h5, h6) {
        display: inline-block;
    }
    a:focus {
        p & {
            /* Offset for text */
            outline-offset: 5px;
        }
        :is(nav) & {
            outline-offset: 10px; /* Increase */
        }
    }
}



/* GROUP COMPONENTS / SKIP TO CONTENT
=================================================== */
/* Notes...

	What does it do?
	----------------
	"Skip to content" is a feature commonly found on websites designed to enhance accessibility. It's typically a hidden link placed at the top of a webpage that allows users who navigate via screen readers or keyboard shortcuts to bypass repetitive content (like navigation menus) and jump directly to the main content of the page. This helps users with disabilities or those who rely on assistive technologies to access and consume the essential information on a website more efficiently.

*/
/* HTML Example...

    <a class="c-skip-to-content" href="#content">
        Skip to content
    </a>

*/
@layer components {
    /* a*/
    .c-skip-to-content {
        position: fixed;
        z-index: var(--z-index-above-nav);
        top: 1rem;
        left: 2rem;

        padding: 0.5rem 1rem;

        font-size: var(--font-size-s-x);
        font-weight: var(--font-family-main-weight-strong);
        text-decoration: none;

        background: var(--color-primary-accent);
        color: white;

        opacity: 0;

        outline-offset: 2px;

        /* If they're OK with animation */
        @media (prefers-reduced-motion: no-preference) {
            transform: translateY(-6rem);
            transition: var(--transition-transform);
        }

        &:focus {
            transform: unset;
            opacity: 1;
        }
    }
}



/* GROUP COMPONENTS / SITE HEADER
=================================================== */
.c-site-header {
    max-width: var(--max-width-1);
    margin-inline: auto;
    padding: var(--spacing-m) var(--spacing-l);
    width: 100%;

    .o-current-menu-item {
        color: var(--color-primary-accent);
    }
}
.c-site-header__inner {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.c-site-logo {
    padding: var(--spacing-s-x);
    margin: calc(0% - var(--spacing-s-x));
    transition: var(--transition-transform);

    & img {
        user-select: none;
    }

    &:hover {
        transform: scale(1.25) rotate(2deg);
    }
}
.c-site-header__nav-desktop,
.c-site-header__nav-mobile {
    & ul ul a {
        display: block;
        white-space: nowrap;
    }
}
.c-site-header__nav-desktop {
    & ul {
        padding: 0;
        margin-inline-start: var(--spacing-l);
        list-style: none;

        &:first-child {
            display: flex;
            align-items: center;
            gap: var(--spacing-l-static);
        }

        & a {
            font-size: var(--font-size-s);
        }

        & ul {
            position: absolute;
            z-index: var(--z-index-nav);
            right: 0;
            padding: var(--spacing-s-x) var(--spacing-s);
            margin-block-start: var(--spacing-s-x);
            margin-inline-start: calc(0% - var(--spacing-s));
            background: white;
            border-radius: 0.25rem;
            border: var(--border-neutral);
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);

            & a {
                padding: var(--spacing-s) var(--spacing-s-x);
                margin-inline: calc(0% - var(--spacing-s-x-x));
                font-size: var(--font-size-s-x); line-height: var(--font-size-s-x-line-height);
            }
        }
    }
    & li {
        position: relative;
        line-height: 1;
    }
    & a {
        display: flex;
        gap: var(--spacing-s-x-x);
        align-items: center;
        padding: var(--spacing-s-x-x);
        font-size: var(--font-size-s-x); line-height: var(--font-size-s-x-line-height);
        font-weight: var(--font-family-main-weight-strong);

        &:hover {
            color: var(--color-primary-accent);
        }
    }
}
.c-site-header__nav-mobile {
    & button {
        position: fixed;
        z-index: var(--z-index-above-nav);
        display: flex;
        right: 0;
        bottom: 0;
        width: 4rem;
        height: 4rem;
        margin-inline-end: var(--spacing-l);
        justify-content: center;
        align-items: center;
        background: var(--color-primary-accent);
        color: white;
        font-size: var(--font-size-s-x); line-height: var(--font-size-s-x-line-height);
        font-weight: var(--font-family-main-weight-strong);
        border-radius: 0.25rem;
    }
    & ul:first-child {
        padding: var(--spacing-s-1) 0 var(--spacing-s-x);
    }
    & ul {
        display: flex;
        flex-direction: column;
        overflow: auto;
        list-style: none;

        & ul {
            flex-direction: column;
            align-items: stretch;
        }
    }
    & a {
        display: flex;
        padding-block: var(--spacing-s-x);
        margin-inline-start: var(--spacing-s-x-x);
        align-items: center;
        width: 100%;
        font-size: var(--font-size-s-1); line-height: var(--font-size-s-1-line-height);
        font-weight: var(--font-family-main-weight-strong);
    }
}
.c-site-header__nav-mobile__inner {
    position: fixed;
    z-index: var(--z-index-nav);
    inset: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    padding: var(--spacing-l) var(--spacing-l) var(--spacing-l-1);
    background: white;
}



/* GROUP COMPONENTS / SITE FOOTER
=================================================== */
.c-site-footer {
    width: 100%;
    padding-block: var(--spacing-s-1);
    max-width: var(--max-width-1);
    margin-inline: auto;
}
.c-site-footer__inner {
    display: flex;
    padding-inline: var(--spacing-l);
    flex-direction: column;
    gap: var(--spacing-m);

    @media (min-width: 768px) {
        flex-direction: row;
        justify-content: space-between;
    }
}
.c-site-footer__1 {
    display: flex;
    flex-direction: column;
    font-size: var(--font-size-s-x);
    line-height: var(--font-size-s-x-line-height);
    font-weight: var(--font-family-main-weight-strong);
}
.c-site-footer__2 {
    display: flex;
    margin-inline-start: var(--spacing-s-x);

    & a {
        padding-block: var(--spacing-s-x-x);
    }
}



/* GROUP SCOPE / FRAMEWORK / ENTRY / ENTRY CONTENT
=================================================== */
/* HTML Example...

    <article>
        <h1>Title</h1>
        <div class="s-entry-content-wrapper"> <-- controls the max-width
            <div class="s-entry-content">
                <p>Entry content</p>
            </div>
        </div>
    </article>

*/
@layer scope {
    .s-entry-content-wrapper {
        max-width: var(--max-width-1);
        margin-inline: auto;
        padding-block-end: var(--spacing-l-4);
        /* If it's the first entry-content on the page then push it away from the header */
        :is(main) > section > article & {
            padding-block-start: var(--spacing-vh-s);
        }
    }
    .s-entry-content {
        max-width: var(--max-width-reading);
        margin-inline: auto;
        padding-inline: var(--spacing-l);

        & > .h1 {
            padding-block-start: 0;
        }

        :is(ol, ul) {
            padding-inline-start: 0.8rem;
        }

        & p {
            font-size: var(--font-size-s);
        }

        & p + :is(ol, ul) {
            padding-block-start: var(--spacing-s);
            padding-block-end: var(--spacing-l);
        }

        & li :is(ol, ul) {
            /* e.g.

            <ul>
                <li>something</li>
                <li>something else
                    <ol> <-- we don't want this to have extra padding

            */
            padding-inline: 0;
            padding-block-start: 0;
        }

        & li {
            /* e.g. ul li */
            padding-inline-start: var(--spacing-s-x-x);

            /* Bard wraps <li> text in a <p> tag */
            & p {
                padding-block-end: 0!important;
            }
        }

        /* e.g. an img output wrapped in a figure element */
        & figure {
            margin: 0;
        }

        &:has(+ .s-entry-content--inline-image) {
            /* Increase - push an inline image away from the paragraph above */
            padding-block-end: var(--spacing-l-3);
        }
    }
}



/* GROUP UTILITIES
=================================================== */
@layer utilities {
    .u-object-fit-cover {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }
    /* GROUP UTILITIES / LAYOUT / HIDERS
    =================================================== */
    @media (min-width: 768px) {
        .u-mq-768-down {
            display: none!important;
        }
    }
    @media (max-width: 767px) {
        .u-mq-768-up {
            display: none!important;
        }
    }
}